# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.24

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/os/code/duckdb

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/os/code/duckdb/cbuild

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -E cmake_progress_start /home/os/code/duckdb/cbuild/CMakeFiles /home/os/code/duckdb/cbuild/src/catalog/catalog_entry//CMakeFiles/progress.marks
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/catalog/catalog_entry/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/os/code/duckdb/cbuild/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/catalog/catalog_entry/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/catalog/catalog_entry/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/catalog/catalog_entry/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/rule:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/rule
.PHONY : src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/rule

# Convenience name for target.
duckdb_catalog_entries: src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/rule
.PHONY : duckdb_catalog_entries

# fast build rule for target.
duckdb_catalog_entries/fast:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build
.PHONY : duckdb_catalog_entries/fast

column_dependency_manager.o: column_dependency_manager.cpp.o
.PHONY : column_dependency_manager.o

# target to build an object file
column_dependency_manager.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/column_dependency_manager.cpp.o
.PHONY : column_dependency_manager.cpp.o

column_dependency_manager.i: column_dependency_manager.cpp.i
.PHONY : column_dependency_manager.i

# target to preprocess a source file
column_dependency_manager.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/column_dependency_manager.cpp.i
.PHONY : column_dependency_manager.cpp.i

column_dependency_manager.s: column_dependency_manager.cpp.s
.PHONY : column_dependency_manager.s

# target to generate assembly for a file
column_dependency_manager.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/column_dependency_manager.cpp.s
.PHONY : column_dependency_manager.cpp.s

copy_function_catalog_entry.o: copy_function_catalog_entry.cpp.o
.PHONY : copy_function_catalog_entry.o

# target to build an object file
copy_function_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/copy_function_catalog_entry.cpp.o
.PHONY : copy_function_catalog_entry.cpp.o

copy_function_catalog_entry.i: copy_function_catalog_entry.cpp.i
.PHONY : copy_function_catalog_entry.i

# target to preprocess a source file
copy_function_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/copy_function_catalog_entry.cpp.i
.PHONY : copy_function_catalog_entry.cpp.i

copy_function_catalog_entry.s: copy_function_catalog_entry.cpp.s
.PHONY : copy_function_catalog_entry.s

# target to generate assembly for a file
copy_function_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/copy_function_catalog_entry.cpp.s
.PHONY : copy_function_catalog_entry.cpp.s

index_catalog_entry.o: index_catalog_entry.cpp.o
.PHONY : index_catalog_entry.o

# target to build an object file
index_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/index_catalog_entry.cpp.o
.PHONY : index_catalog_entry.cpp.o

index_catalog_entry.i: index_catalog_entry.cpp.i
.PHONY : index_catalog_entry.i

# target to preprocess a source file
index_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/index_catalog_entry.cpp.i
.PHONY : index_catalog_entry.cpp.i

index_catalog_entry.s: index_catalog_entry.cpp.s
.PHONY : index_catalog_entry.s

# target to generate assembly for a file
index_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/index_catalog_entry.cpp.s
.PHONY : index_catalog_entry.cpp.s

pragma_function_catalog_entry.o: pragma_function_catalog_entry.cpp.o
.PHONY : pragma_function_catalog_entry.o

# target to build an object file
pragma_function_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/pragma_function_catalog_entry.cpp.o
.PHONY : pragma_function_catalog_entry.cpp.o

pragma_function_catalog_entry.i: pragma_function_catalog_entry.cpp.i
.PHONY : pragma_function_catalog_entry.i

# target to preprocess a source file
pragma_function_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/pragma_function_catalog_entry.cpp.i
.PHONY : pragma_function_catalog_entry.cpp.i

pragma_function_catalog_entry.s: pragma_function_catalog_entry.cpp.s
.PHONY : pragma_function_catalog_entry.s

# target to generate assembly for a file
pragma_function_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/pragma_function_catalog_entry.cpp.s
.PHONY : pragma_function_catalog_entry.cpp.s

scalar_macro_catalog_entry.o: scalar_macro_catalog_entry.cpp.o
.PHONY : scalar_macro_catalog_entry.o

# target to build an object file
scalar_macro_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/scalar_macro_catalog_entry.cpp.o
.PHONY : scalar_macro_catalog_entry.cpp.o

scalar_macro_catalog_entry.i: scalar_macro_catalog_entry.cpp.i
.PHONY : scalar_macro_catalog_entry.i

# target to preprocess a source file
scalar_macro_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/scalar_macro_catalog_entry.cpp.i
.PHONY : scalar_macro_catalog_entry.cpp.i

scalar_macro_catalog_entry.s: scalar_macro_catalog_entry.cpp.s
.PHONY : scalar_macro_catalog_entry.s

# target to generate assembly for a file
scalar_macro_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/scalar_macro_catalog_entry.cpp.s
.PHONY : scalar_macro_catalog_entry.cpp.s

schema_catalog_entry.o: schema_catalog_entry.cpp.o
.PHONY : schema_catalog_entry.o

# target to build an object file
schema_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/schema_catalog_entry.cpp.o
.PHONY : schema_catalog_entry.cpp.o

schema_catalog_entry.i: schema_catalog_entry.cpp.i
.PHONY : schema_catalog_entry.i

# target to preprocess a source file
schema_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/schema_catalog_entry.cpp.i
.PHONY : schema_catalog_entry.cpp.i

schema_catalog_entry.s: schema_catalog_entry.cpp.s
.PHONY : schema_catalog_entry.s

# target to generate assembly for a file
schema_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/schema_catalog_entry.cpp.s
.PHONY : schema_catalog_entry.cpp.s

sequence_catalog_entry.o: sequence_catalog_entry.cpp.o
.PHONY : sequence_catalog_entry.o

# target to build an object file
sequence_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/sequence_catalog_entry.cpp.o
.PHONY : sequence_catalog_entry.cpp.o

sequence_catalog_entry.i: sequence_catalog_entry.cpp.i
.PHONY : sequence_catalog_entry.i

# target to preprocess a source file
sequence_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/sequence_catalog_entry.cpp.i
.PHONY : sequence_catalog_entry.cpp.i

sequence_catalog_entry.s: sequence_catalog_entry.cpp.s
.PHONY : sequence_catalog_entry.s

# target to generate assembly for a file
sequence_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/sequence_catalog_entry.cpp.s
.PHONY : sequence_catalog_entry.cpp.s

table_catalog_entry.o: table_catalog_entry.cpp.o
.PHONY : table_catalog_entry.o

# target to build an object file
table_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/table_catalog_entry.cpp.o
.PHONY : table_catalog_entry.cpp.o

table_catalog_entry.i: table_catalog_entry.cpp.i
.PHONY : table_catalog_entry.i

# target to preprocess a source file
table_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/table_catalog_entry.cpp.i
.PHONY : table_catalog_entry.cpp.i

table_catalog_entry.s: table_catalog_entry.cpp.s
.PHONY : table_catalog_entry.s

# target to generate assembly for a file
table_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/table_catalog_entry.cpp.s
.PHONY : table_catalog_entry.cpp.s

table_function_catalog_entry.o: table_function_catalog_entry.cpp.o
.PHONY : table_function_catalog_entry.o

# target to build an object file
table_function_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/table_function_catalog_entry.cpp.o
.PHONY : table_function_catalog_entry.cpp.o

table_function_catalog_entry.i: table_function_catalog_entry.cpp.i
.PHONY : table_function_catalog_entry.i

# target to preprocess a source file
table_function_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/table_function_catalog_entry.cpp.i
.PHONY : table_function_catalog_entry.cpp.i

table_function_catalog_entry.s: table_function_catalog_entry.cpp.s
.PHONY : table_function_catalog_entry.s

# target to generate assembly for a file
table_function_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/table_function_catalog_entry.cpp.s
.PHONY : table_function_catalog_entry.cpp.s

type_catalog_entry.o: type_catalog_entry.cpp.o
.PHONY : type_catalog_entry.o

# target to build an object file
type_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/type_catalog_entry.cpp.o
.PHONY : type_catalog_entry.cpp.o

type_catalog_entry.i: type_catalog_entry.cpp.i
.PHONY : type_catalog_entry.i

# target to preprocess a source file
type_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/type_catalog_entry.cpp.i
.PHONY : type_catalog_entry.cpp.i

type_catalog_entry.s: type_catalog_entry.cpp.s
.PHONY : type_catalog_entry.s

# target to generate assembly for a file
type_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/type_catalog_entry.cpp.s
.PHONY : type_catalog_entry.cpp.s

view_catalog_entry.o: view_catalog_entry.cpp.o
.PHONY : view_catalog_entry.o

# target to build an object file
view_catalog_entry.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/view_catalog_entry.cpp.o
.PHONY : view_catalog_entry.cpp.o

view_catalog_entry.i: view_catalog_entry.cpp.i
.PHONY : view_catalog_entry.i

# target to preprocess a source file
view_catalog_entry.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/view_catalog_entry.cpp.i
.PHONY : view_catalog_entry.cpp.i

view_catalog_entry.s: view_catalog_entry.cpp.s
.PHONY : view_catalog_entry.s

# target to generate assembly for a file
view_catalog_entry.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/build.make src/catalog/catalog_entry/CMakeFiles/duckdb_catalog_entries.dir/view_catalog_entry.cpp.s
.PHONY : view_catalog_entry.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... duckdb_catalog_entries"
	@echo "... column_dependency_manager.o"
	@echo "... column_dependency_manager.i"
	@echo "... column_dependency_manager.s"
	@echo "... copy_function_catalog_entry.o"
	@echo "... copy_function_catalog_entry.i"
	@echo "... copy_function_catalog_entry.s"
	@echo "... index_catalog_entry.o"
	@echo "... index_catalog_entry.i"
	@echo "... index_catalog_entry.s"
	@echo "... pragma_function_catalog_entry.o"
	@echo "... pragma_function_catalog_entry.i"
	@echo "... pragma_function_catalog_entry.s"
	@echo "... scalar_macro_catalog_entry.o"
	@echo "... scalar_macro_catalog_entry.i"
	@echo "... scalar_macro_catalog_entry.s"
	@echo "... schema_catalog_entry.o"
	@echo "... schema_catalog_entry.i"
	@echo "... schema_catalog_entry.s"
	@echo "... sequence_catalog_entry.o"
	@echo "... sequence_catalog_entry.i"
	@echo "... sequence_catalog_entry.s"
	@echo "... table_catalog_entry.o"
	@echo "... table_catalog_entry.i"
	@echo "... table_catalog_entry.s"
	@echo "... table_function_catalog_entry.o"
	@echo "... table_function_catalog_entry.i"
	@echo "... table_function_catalog_entry.s"
	@echo "... type_catalog_entry.o"
	@echo "... type_catalog_entry.i"
	@echo "... type_catalog_entry.s"
	@echo "... view_catalog_entry.o"
	@echo "... view_catalog_entry.i"
	@echo "... view_catalog_entry.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

