# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.24

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/os/code/duckdb

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/os/code/duckdb/cbuild

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -E cmake_progress_start /home/os/code/duckdb/cbuild/CMakeFiles /home/os/code/duckdb/cbuild/src/common/enums//CMakeFiles/progress.marks
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/common/enums/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/os/code/duckdb/cbuild/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/common/enums/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/common/enums/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/common/enums/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
src/common/enums/CMakeFiles/duckdb_common_enums.dir/rule:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/common/enums/CMakeFiles/duckdb_common_enums.dir/rule
.PHONY : src/common/enums/CMakeFiles/duckdb_common_enums.dir/rule

# Convenience name for target.
duckdb_common_enums: src/common/enums/CMakeFiles/duckdb_common_enums.dir/rule
.PHONY : duckdb_common_enums

# fast build rule for target.
duckdb_common_enums/fast:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/build
.PHONY : duckdb_common_enums/fast

catalog_type.o: catalog_type.cpp.o
.PHONY : catalog_type.o

# target to build an object file
catalog_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/catalog_type.cpp.o
.PHONY : catalog_type.cpp.o

catalog_type.i: catalog_type.cpp.i
.PHONY : catalog_type.i

# target to preprocess a source file
catalog_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/catalog_type.cpp.i
.PHONY : catalog_type.cpp.i

catalog_type.s: catalog_type.cpp.s
.PHONY : catalog_type.s

# target to generate assembly for a file
catalog_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/catalog_type.cpp.s
.PHONY : catalog_type.cpp.s

compression_type.o: compression_type.cpp.o
.PHONY : compression_type.o

# target to build an object file
compression_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/compression_type.cpp.o
.PHONY : compression_type.cpp.o

compression_type.i: compression_type.cpp.i
.PHONY : compression_type.i

# target to preprocess a source file
compression_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/compression_type.cpp.i
.PHONY : compression_type.cpp.i

compression_type.s: compression_type.cpp.s
.PHONY : compression_type.s

# target to generate assembly for a file
compression_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/compression_type.cpp.s
.PHONY : compression_type.cpp.s

expression_type.o: expression_type.cpp.o
.PHONY : expression_type.o

# target to build an object file
expression_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/expression_type.cpp.o
.PHONY : expression_type.cpp.o

expression_type.i: expression_type.cpp.i
.PHONY : expression_type.i

# target to preprocess a source file
expression_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/expression_type.cpp.i
.PHONY : expression_type.cpp.i

expression_type.s: expression_type.cpp.s
.PHONY : expression_type.s

# target to generate assembly for a file
expression_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/expression_type.cpp.s
.PHONY : expression_type.cpp.s

file_compression_type.o: file_compression_type.cpp.o
.PHONY : file_compression_type.o

# target to build an object file
file_compression_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/file_compression_type.cpp.o
.PHONY : file_compression_type.cpp.o

file_compression_type.i: file_compression_type.cpp.i
.PHONY : file_compression_type.i

# target to preprocess a source file
file_compression_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/file_compression_type.cpp.i
.PHONY : file_compression_type.cpp.i

file_compression_type.s: file_compression_type.cpp.s
.PHONY : file_compression_type.s

# target to generate assembly for a file
file_compression_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/file_compression_type.cpp.s
.PHONY : file_compression_type.cpp.s

join_type.o: join_type.cpp.o
.PHONY : join_type.o

# target to build an object file
join_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/join_type.cpp.o
.PHONY : join_type.cpp.o

join_type.i: join_type.cpp.i
.PHONY : join_type.i

# target to preprocess a source file
join_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/join_type.cpp.i
.PHONY : join_type.cpp.i

join_type.s: join_type.cpp.s
.PHONY : join_type.s

# target to generate assembly for a file
join_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/join_type.cpp.s
.PHONY : join_type.cpp.s

logical_operator_type.o: logical_operator_type.cpp.o
.PHONY : logical_operator_type.o

# target to build an object file
logical_operator_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/logical_operator_type.cpp.o
.PHONY : logical_operator_type.cpp.o

logical_operator_type.i: logical_operator_type.cpp.i
.PHONY : logical_operator_type.i

# target to preprocess a source file
logical_operator_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/logical_operator_type.cpp.i
.PHONY : logical_operator_type.cpp.i

logical_operator_type.s: logical_operator_type.cpp.s
.PHONY : logical_operator_type.s

# target to generate assembly for a file
logical_operator_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/logical_operator_type.cpp.s
.PHONY : logical_operator_type.cpp.s

optimizer_type.o: optimizer_type.cpp.o
.PHONY : optimizer_type.o

# target to build an object file
optimizer_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/optimizer_type.cpp.o
.PHONY : optimizer_type.cpp.o

optimizer_type.i: optimizer_type.cpp.i
.PHONY : optimizer_type.i

# target to preprocess a source file
optimizer_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/optimizer_type.cpp.i
.PHONY : optimizer_type.cpp.i

optimizer_type.s: optimizer_type.cpp.s
.PHONY : optimizer_type.s

# target to generate assembly for a file
optimizer_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/optimizer_type.cpp.s
.PHONY : optimizer_type.cpp.s

physical_operator_type.o: physical_operator_type.cpp.o
.PHONY : physical_operator_type.o

# target to build an object file
physical_operator_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/physical_operator_type.cpp.o
.PHONY : physical_operator_type.cpp.o

physical_operator_type.i: physical_operator_type.cpp.i
.PHONY : physical_operator_type.i

# target to preprocess a source file
physical_operator_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/physical_operator_type.cpp.i
.PHONY : physical_operator_type.cpp.i

physical_operator_type.s: physical_operator_type.cpp.s
.PHONY : physical_operator_type.s

# target to generate assembly for a file
physical_operator_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/physical_operator_type.cpp.s
.PHONY : physical_operator_type.cpp.s

relation_type.o: relation_type.cpp.o
.PHONY : relation_type.o

# target to build an object file
relation_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/relation_type.cpp.o
.PHONY : relation_type.cpp.o

relation_type.i: relation_type.cpp.i
.PHONY : relation_type.i

# target to preprocess a source file
relation_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/relation_type.cpp.i
.PHONY : relation_type.cpp.i

relation_type.s: relation_type.cpp.s
.PHONY : relation_type.s

# target to generate assembly for a file
relation_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/relation_type.cpp.s
.PHONY : relation_type.cpp.s

statement_type.o: statement_type.cpp.o
.PHONY : statement_type.o

# target to build an object file
statement_type.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/statement_type.cpp.o
.PHONY : statement_type.cpp.o

statement_type.i: statement_type.cpp.i
.PHONY : statement_type.i

# target to preprocess a source file
statement_type.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/statement_type.cpp.i
.PHONY : statement_type.cpp.i

statement_type.s: statement_type.cpp.s
.PHONY : statement_type.s

# target to generate assembly for a file
statement_type.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/common/enums/CMakeFiles/duckdb_common_enums.dir/build.make src/common/enums/CMakeFiles/duckdb_common_enums.dir/statement_type.cpp.s
.PHONY : statement_type.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... duckdb_common_enums"
	@echo "... catalog_type.o"
	@echo "... catalog_type.i"
	@echo "... catalog_type.s"
	@echo "... compression_type.o"
	@echo "... compression_type.i"
	@echo "... compression_type.s"
	@echo "... expression_type.o"
	@echo "... expression_type.i"
	@echo "... expression_type.s"
	@echo "... file_compression_type.o"
	@echo "... file_compression_type.i"
	@echo "... file_compression_type.s"
	@echo "... join_type.o"
	@echo "... join_type.i"
	@echo "... join_type.s"
	@echo "... logical_operator_type.o"
	@echo "... logical_operator_type.i"
	@echo "... logical_operator_type.s"
	@echo "... optimizer_type.o"
	@echo "... optimizer_type.i"
	@echo "... optimizer_type.s"
	@echo "... physical_operator_type.o"
	@echo "... physical_operator_type.i"
	@echo "... physical_operator_type.s"
	@echo "... relation_type.o"
	@echo "... relation_type.i"
	@echo "... relation_type.s"
	@echo "... statement_type.o"
	@echo "... statement_type.i"
	@echo "... statement_type.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

