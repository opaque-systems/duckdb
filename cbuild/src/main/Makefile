# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.24

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/os/code/duckdb

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/os/code/duckdb/cbuild

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -E cmake_progress_start /home/os/code/duckdb/cbuild/CMakeFiles /home/os/code/duckdb/cbuild/src/main//CMakeFiles/progress.marks
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/main/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/os/code/duckdb/cbuild/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/main/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/main/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/main/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
src/main/CMakeFiles/duckdb_main.dir/rule:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/main/CMakeFiles/duckdb_main.dir/rule
.PHONY : src/main/CMakeFiles/duckdb_main.dir/rule

# Convenience name for target.
duckdb_main: src/main/CMakeFiles/duckdb_main.dir/rule
.PHONY : duckdb_main

# fast build rule for target.
duckdb_main/fast:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/build
.PHONY : duckdb_main/fast

appender.o: appender.cpp.o
.PHONY : appender.o

# target to build an object file
appender.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/appender.cpp.o
.PHONY : appender.cpp.o

appender.i: appender.cpp.i
.PHONY : appender.i

# target to preprocess a source file
appender.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/appender.cpp.i
.PHONY : appender.cpp.i

appender.s: appender.cpp.s
.PHONY : appender.s

# target to generate assembly for a file
appender.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/appender.cpp.s
.PHONY : appender.cpp.s

client_context.o: client_context.cpp.o
.PHONY : client_context.o

# target to build an object file
client_context.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_context.cpp.o
.PHONY : client_context.cpp.o

client_context.i: client_context.cpp.i
.PHONY : client_context.i

# target to preprocess a source file
client_context.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_context.cpp.i
.PHONY : client_context.cpp.i

client_context.s: client_context.cpp.s
.PHONY : client_context.s

# target to generate assembly for a file
client_context.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_context.cpp.s
.PHONY : client_context.cpp.s

client_context_file_opener.o: client_context_file_opener.cpp.o
.PHONY : client_context_file_opener.o

# target to build an object file
client_context_file_opener.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_context_file_opener.cpp.o
.PHONY : client_context_file_opener.cpp.o

client_context_file_opener.i: client_context_file_opener.cpp.i
.PHONY : client_context_file_opener.i

# target to preprocess a source file
client_context_file_opener.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_context_file_opener.cpp.i
.PHONY : client_context_file_opener.cpp.i

client_context_file_opener.s: client_context_file_opener.cpp.s
.PHONY : client_context_file_opener.s

# target to generate assembly for a file
client_context_file_opener.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_context_file_opener.cpp.s
.PHONY : client_context_file_opener.cpp.s

client_data.o: client_data.cpp.o
.PHONY : client_data.o

# target to build an object file
client_data.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_data.cpp.o
.PHONY : client_data.cpp.o

client_data.i: client_data.cpp.i
.PHONY : client_data.i

# target to preprocess a source file
client_data.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_data.cpp.i
.PHONY : client_data.cpp.i

client_data.s: client_data.cpp.s
.PHONY : client_data.s

# target to generate assembly for a file
client_data.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/client_data.cpp.s
.PHONY : client_data.cpp.s

config.o: config.cpp.o
.PHONY : config.o

# target to build an object file
config.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/config.cpp.o
.PHONY : config.cpp.o

config.i: config.cpp.i
.PHONY : config.i

# target to preprocess a source file
config.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/config.cpp.i
.PHONY : config.cpp.i

config.s: config.cpp.s
.PHONY : config.s

# target to generate assembly for a file
config.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/config.cpp.s
.PHONY : config.cpp.s

connection.o: connection.cpp.o
.PHONY : connection.o

# target to build an object file
connection.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/connection.cpp.o
.PHONY : connection.cpp.o

connection.i: connection.cpp.i
.PHONY : connection.i

# target to preprocess a source file
connection.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/connection.cpp.i
.PHONY : connection.cpp.i

connection.s: connection.cpp.s
.PHONY : connection.s

# target to generate assembly for a file
connection.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/connection.cpp.s
.PHONY : connection.cpp.s

database.o: database.cpp.o
.PHONY : database.o

# target to build an object file
database.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/database.cpp.o
.PHONY : database.cpp.o

database.i: database.cpp.i
.PHONY : database.i

# target to preprocess a source file
database.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/database.cpp.i
.PHONY : database.cpp.i

database.s: database.cpp.s
.PHONY : database.s

# target to generate assembly for a file
database.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/database.cpp.s
.PHONY : database.cpp.s

extension.o: extension.cpp.o
.PHONY : extension.o

# target to build an object file
extension.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/extension.cpp.o
.PHONY : extension.cpp.o

extension.i: extension.cpp.i
.PHONY : extension.i

# target to preprocess a source file
extension.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/extension.cpp.i
.PHONY : extension.cpp.i

extension.s: extension.cpp.s
.PHONY : extension.s

# target to generate assembly for a file
extension.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/extension.cpp.s
.PHONY : extension.cpp.s

materialized_query_result.o: materialized_query_result.cpp.o
.PHONY : materialized_query_result.o

# target to build an object file
materialized_query_result.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/materialized_query_result.cpp.o
.PHONY : materialized_query_result.cpp.o

materialized_query_result.i: materialized_query_result.cpp.i
.PHONY : materialized_query_result.i

# target to preprocess a source file
materialized_query_result.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/materialized_query_result.cpp.i
.PHONY : materialized_query_result.cpp.i

materialized_query_result.s: materialized_query_result.cpp.s
.PHONY : materialized_query_result.s

# target to generate assembly for a file
materialized_query_result.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/materialized_query_result.cpp.s
.PHONY : materialized_query_result.cpp.s

pending_query_result.o: pending_query_result.cpp.o
.PHONY : pending_query_result.o

# target to build an object file
pending_query_result.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/pending_query_result.cpp.o
.PHONY : pending_query_result.cpp.o

pending_query_result.i: pending_query_result.cpp.i
.PHONY : pending_query_result.i

# target to preprocess a source file
pending_query_result.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/pending_query_result.cpp.i
.PHONY : pending_query_result.cpp.i

pending_query_result.s: pending_query_result.cpp.s
.PHONY : pending_query_result.s

# target to generate assembly for a file
pending_query_result.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/pending_query_result.cpp.s
.PHONY : pending_query_result.cpp.s

prepared_statement.o: prepared_statement.cpp.o
.PHONY : prepared_statement.o

# target to build an object file
prepared_statement.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/prepared_statement.cpp.o
.PHONY : prepared_statement.cpp.o

prepared_statement.i: prepared_statement.cpp.i
.PHONY : prepared_statement.i

# target to preprocess a source file
prepared_statement.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/prepared_statement.cpp.i
.PHONY : prepared_statement.cpp.i

prepared_statement.s: prepared_statement.cpp.s
.PHONY : prepared_statement.s

# target to generate assembly for a file
prepared_statement.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/prepared_statement.cpp.s
.PHONY : prepared_statement.cpp.s

prepared_statement_data.o: prepared_statement_data.cpp.o
.PHONY : prepared_statement_data.o

# target to build an object file
prepared_statement_data.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/prepared_statement_data.cpp.o
.PHONY : prepared_statement_data.cpp.o

prepared_statement_data.i: prepared_statement_data.cpp.i
.PHONY : prepared_statement_data.i

# target to preprocess a source file
prepared_statement_data.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/prepared_statement_data.cpp.i
.PHONY : prepared_statement_data.cpp.i

prepared_statement_data.s: prepared_statement_data.cpp.s
.PHONY : prepared_statement_data.s

# target to generate assembly for a file
prepared_statement_data.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/prepared_statement_data.cpp.s
.PHONY : prepared_statement_data.cpp.s

query_profiler.o: query_profiler.cpp.o
.PHONY : query_profiler.o

# target to build an object file
query_profiler.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/query_profiler.cpp.o
.PHONY : query_profiler.cpp.o

query_profiler.i: query_profiler.cpp.i
.PHONY : query_profiler.i

# target to preprocess a source file
query_profiler.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/query_profiler.cpp.i
.PHONY : query_profiler.cpp.i

query_profiler.s: query_profiler.cpp.s
.PHONY : query_profiler.s

# target to generate assembly for a file
query_profiler.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/query_profiler.cpp.s
.PHONY : query_profiler.cpp.s

query_result.o: query_result.cpp.o
.PHONY : query_result.o

# target to build an object file
query_result.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/query_result.cpp.o
.PHONY : query_result.cpp.o

query_result.i: query_result.cpp.i
.PHONY : query_result.i

# target to preprocess a source file
query_result.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/query_result.cpp.i
.PHONY : query_result.cpp.i

query_result.s: query_result.cpp.s
.PHONY : query_result.s

# target to generate assembly for a file
query_result.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/query_result.cpp.s
.PHONY : query_result.cpp.s

relation.o: relation.cpp.o
.PHONY : relation.o

# target to build an object file
relation.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/relation.cpp.o
.PHONY : relation.cpp.o

relation.i: relation.cpp.i
.PHONY : relation.i

# target to preprocess a source file
relation.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/relation.cpp.i
.PHONY : relation.cpp.i

relation.s: relation.cpp.s
.PHONY : relation.s

# target to generate assembly for a file
relation.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/relation.cpp.s
.PHONY : relation.cpp.s

stream_query_result.o: stream_query_result.cpp.o
.PHONY : stream_query_result.o

# target to build an object file
stream_query_result.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/stream_query_result.cpp.o
.PHONY : stream_query_result.cpp.o

stream_query_result.i: stream_query_result.cpp.i
.PHONY : stream_query_result.i

# target to preprocess a source file
stream_query_result.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/stream_query_result.cpp.i
.PHONY : stream_query_result.cpp.i

stream_query_result.s: stream_query_result.cpp.s
.PHONY : stream_query_result.s

# target to generate assembly for a file
stream_query_result.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/main/CMakeFiles/duckdb_main.dir/build.make src/main/CMakeFiles/duckdb_main.dir/stream_query_result.cpp.s
.PHONY : stream_query_result.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... duckdb_main"
	@echo "... appender.o"
	@echo "... appender.i"
	@echo "... appender.s"
	@echo "... client_context.o"
	@echo "... client_context.i"
	@echo "... client_context.s"
	@echo "... client_context_file_opener.o"
	@echo "... client_context_file_opener.i"
	@echo "... client_context_file_opener.s"
	@echo "... client_data.o"
	@echo "... client_data.i"
	@echo "... client_data.s"
	@echo "... config.o"
	@echo "... config.i"
	@echo "... config.s"
	@echo "... connection.o"
	@echo "... connection.i"
	@echo "... connection.s"
	@echo "... database.o"
	@echo "... database.i"
	@echo "... database.s"
	@echo "... extension.o"
	@echo "... extension.i"
	@echo "... extension.s"
	@echo "... materialized_query_result.o"
	@echo "... materialized_query_result.i"
	@echo "... materialized_query_result.s"
	@echo "... pending_query_result.o"
	@echo "... pending_query_result.i"
	@echo "... pending_query_result.s"
	@echo "... prepared_statement.o"
	@echo "... prepared_statement.i"
	@echo "... prepared_statement.s"
	@echo "... prepared_statement_data.o"
	@echo "... prepared_statement_data.i"
	@echo "... prepared_statement_data.s"
	@echo "... query_profiler.o"
	@echo "... query_profiler.i"
	@echo "... query_profiler.s"
	@echo "... query_result.o"
	@echo "... query_result.i"
	@echo "... query_result.s"
	@echo "... relation.o"
	@echo "... relation.i"
	@echo "... relation.s"
	@echo "... stream_query_result.o"
	@echo "... stream_query_result.i"
	@echo "... stream_query_result.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

