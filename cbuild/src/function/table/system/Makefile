# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.24

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/os/code/duckdb

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/os/code/duckdb/cbuild

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -E cmake_progress_start /home/os/code/duckdb/cbuild/CMakeFiles /home/os/code/duckdb/cbuild/src/function/table/system//CMakeFiles/progress.marks
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/function/table/system/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/os/code/duckdb/cbuild/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/function/table/system/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/function/table/system/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/function/table/system/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/rule:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/rule
.PHONY : src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/rule

# Convenience name for target.
duckdb_table_func_system: src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/rule
.PHONY : duckdb_table_func_system

# fast build rule for target.
duckdb_table_func_system/fast:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build
.PHONY : duckdb_table_func_system/fast

duckdb_columns.o: duckdb_columns.cpp.o
.PHONY : duckdb_columns.o

# target to build an object file
duckdb_columns.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_columns.cpp.o
.PHONY : duckdb_columns.cpp.o

duckdb_columns.i: duckdb_columns.cpp.i
.PHONY : duckdb_columns.i

# target to preprocess a source file
duckdb_columns.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_columns.cpp.i
.PHONY : duckdb_columns.cpp.i

duckdb_columns.s: duckdb_columns.cpp.s
.PHONY : duckdb_columns.s

# target to generate assembly for a file
duckdb_columns.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_columns.cpp.s
.PHONY : duckdb_columns.cpp.s

duckdb_constraints.o: duckdb_constraints.cpp.o
.PHONY : duckdb_constraints.o

# target to build an object file
duckdb_constraints.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_constraints.cpp.o
.PHONY : duckdb_constraints.cpp.o

duckdb_constraints.i: duckdb_constraints.cpp.i
.PHONY : duckdb_constraints.i

# target to preprocess a source file
duckdb_constraints.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_constraints.cpp.i
.PHONY : duckdb_constraints.cpp.i

duckdb_constraints.s: duckdb_constraints.cpp.s
.PHONY : duckdb_constraints.s

# target to generate assembly for a file
duckdb_constraints.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_constraints.cpp.s
.PHONY : duckdb_constraints.cpp.s

duckdb_dependencies.o: duckdb_dependencies.cpp.o
.PHONY : duckdb_dependencies.o

# target to build an object file
duckdb_dependencies.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_dependencies.cpp.o
.PHONY : duckdb_dependencies.cpp.o

duckdb_dependencies.i: duckdb_dependencies.cpp.i
.PHONY : duckdb_dependencies.i

# target to preprocess a source file
duckdb_dependencies.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_dependencies.cpp.i
.PHONY : duckdb_dependencies.cpp.i

duckdb_dependencies.s: duckdb_dependencies.cpp.s
.PHONY : duckdb_dependencies.s

# target to generate assembly for a file
duckdb_dependencies.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_dependencies.cpp.s
.PHONY : duckdb_dependencies.cpp.s

duckdb_functions.o: duckdb_functions.cpp.o
.PHONY : duckdb_functions.o

# target to build an object file
duckdb_functions.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_functions.cpp.o
.PHONY : duckdb_functions.cpp.o

duckdb_functions.i: duckdb_functions.cpp.i
.PHONY : duckdb_functions.i

# target to preprocess a source file
duckdb_functions.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_functions.cpp.i
.PHONY : duckdb_functions.cpp.i

duckdb_functions.s: duckdb_functions.cpp.s
.PHONY : duckdb_functions.s

# target to generate assembly for a file
duckdb_functions.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_functions.cpp.s
.PHONY : duckdb_functions.cpp.s

duckdb_indexes.o: duckdb_indexes.cpp.o
.PHONY : duckdb_indexes.o

# target to build an object file
duckdb_indexes.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_indexes.cpp.o
.PHONY : duckdb_indexes.cpp.o

duckdb_indexes.i: duckdb_indexes.cpp.i
.PHONY : duckdb_indexes.i

# target to preprocess a source file
duckdb_indexes.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_indexes.cpp.i
.PHONY : duckdb_indexes.cpp.i

duckdb_indexes.s: duckdb_indexes.cpp.s
.PHONY : duckdb_indexes.s

# target to generate assembly for a file
duckdb_indexes.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_indexes.cpp.s
.PHONY : duckdb_indexes.cpp.s

duckdb_keywords.o: duckdb_keywords.cpp.o
.PHONY : duckdb_keywords.o

# target to build an object file
duckdb_keywords.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_keywords.cpp.o
.PHONY : duckdb_keywords.cpp.o

duckdb_keywords.i: duckdb_keywords.cpp.i
.PHONY : duckdb_keywords.i

# target to preprocess a source file
duckdb_keywords.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_keywords.cpp.i
.PHONY : duckdb_keywords.cpp.i

duckdb_keywords.s: duckdb_keywords.cpp.s
.PHONY : duckdb_keywords.s

# target to generate assembly for a file
duckdb_keywords.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_keywords.cpp.s
.PHONY : duckdb_keywords.cpp.s

duckdb_schemas.o: duckdb_schemas.cpp.o
.PHONY : duckdb_schemas.o

# target to build an object file
duckdb_schemas.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_schemas.cpp.o
.PHONY : duckdb_schemas.cpp.o

duckdb_schemas.i: duckdb_schemas.cpp.i
.PHONY : duckdb_schemas.i

# target to preprocess a source file
duckdb_schemas.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_schemas.cpp.i
.PHONY : duckdb_schemas.cpp.i

duckdb_schemas.s: duckdb_schemas.cpp.s
.PHONY : duckdb_schemas.s

# target to generate assembly for a file
duckdb_schemas.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_schemas.cpp.s
.PHONY : duckdb_schemas.cpp.s

duckdb_sequences.o: duckdb_sequences.cpp.o
.PHONY : duckdb_sequences.o

# target to build an object file
duckdb_sequences.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_sequences.cpp.o
.PHONY : duckdb_sequences.cpp.o

duckdb_sequences.i: duckdb_sequences.cpp.i
.PHONY : duckdb_sequences.i

# target to preprocess a source file
duckdb_sequences.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_sequences.cpp.i
.PHONY : duckdb_sequences.cpp.i

duckdb_sequences.s: duckdb_sequences.cpp.s
.PHONY : duckdb_sequences.s

# target to generate assembly for a file
duckdb_sequences.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_sequences.cpp.s
.PHONY : duckdb_sequences.cpp.s

duckdb_settings.o: duckdb_settings.cpp.o
.PHONY : duckdb_settings.o

# target to build an object file
duckdb_settings.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_settings.cpp.o
.PHONY : duckdb_settings.cpp.o

duckdb_settings.i: duckdb_settings.cpp.i
.PHONY : duckdb_settings.i

# target to preprocess a source file
duckdb_settings.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_settings.cpp.i
.PHONY : duckdb_settings.cpp.i

duckdb_settings.s: duckdb_settings.cpp.s
.PHONY : duckdb_settings.s

# target to generate assembly for a file
duckdb_settings.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_settings.cpp.s
.PHONY : duckdb_settings.cpp.s

duckdb_tables.o: duckdb_tables.cpp.o
.PHONY : duckdb_tables.o

# target to build an object file
duckdb_tables.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_tables.cpp.o
.PHONY : duckdb_tables.cpp.o

duckdb_tables.i: duckdb_tables.cpp.i
.PHONY : duckdb_tables.i

# target to preprocess a source file
duckdb_tables.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_tables.cpp.i
.PHONY : duckdb_tables.cpp.i

duckdb_tables.s: duckdb_tables.cpp.s
.PHONY : duckdb_tables.s

# target to generate assembly for a file
duckdb_tables.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_tables.cpp.s
.PHONY : duckdb_tables.cpp.s

duckdb_types.o: duckdb_types.cpp.o
.PHONY : duckdb_types.o

# target to build an object file
duckdb_types.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_types.cpp.o
.PHONY : duckdb_types.cpp.o

duckdb_types.i: duckdb_types.cpp.i
.PHONY : duckdb_types.i

# target to preprocess a source file
duckdb_types.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_types.cpp.i
.PHONY : duckdb_types.cpp.i

duckdb_types.s: duckdb_types.cpp.s
.PHONY : duckdb_types.s

# target to generate assembly for a file
duckdb_types.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_types.cpp.s
.PHONY : duckdb_types.cpp.s

duckdb_views.o: duckdb_views.cpp.o
.PHONY : duckdb_views.o

# target to build an object file
duckdb_views.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_views.cpp.o
.PHONY : duckdb_views.cpp.o

duckdb_views.i: duckdb_views.cpp.i
.PHONY : duckdb_views.i

# target to preprocess a source file
duckdb_views.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_views.cpp.i
.PHONY : duckdb_views.cpp.i

duckdb_views.s: duckdb_views.cpp.s
.PHONY : duckdb_views.s

# target to generate assembly for a file
duckdb_views.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/duckdb_views.cpp.s
.PHONY : duckdb_views.cpp.s

pragma_collations.o: pragma_collations.cpp.o
.PHONY : pragma_collations.o

# target to build an object file
pragma_collations.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_collations.cpp.o
.PHONY : pragma_collations.cpp.o

pragma_collations.i: pragma_collations.cpp.i
.PHONY : pragma_collations.i

# target to preprocess a source file
pragma_collations.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_collations.cpp.i
.PHONY : pragma_collations.cpp.i

pragma_collations.s: pragma_collations.cpp.s
.PHONY : pragma_collations.s

# target to generate assembly for a file
pragma_collations.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_collations.cpp.s
.PHONY : pragma_collations.cpp.s

pragma_database_list.o: pragma_database_list.cpp.o
.PHONY : pragma_database_list.o

# target to build an object file
pragma_database_list.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_database_list.cpp.o
.PHONY : pragma_database_list.cpp.o

pragma_database_list.i: pragma_database_list.cpp.i
.PHONY : pragma_database_list.i

# target to preprocess a source file
pragma_database_list.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_database_list.cpp.i
.PHONY : pragma_database_list.cpp.i

pragma_database_list.s: pragma_database_list.cpp.s
.PHONY : pragma_database_list.s

# target to generate assembly for a file
pragma_database_list.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_database_list.cpp.s
.PHONY : pragma_database_list.cpp.s

pragma_database_size.o: pragma_database_size.cpp.o
.PHONY : pragma_database_size.o

# target to build an object file
pragma_database_size.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_database_size.cpp.o
.PHONY : pragma_database_size.cpp.o

pragma_database_size.i: pragma_database_size.cpp.i
.PHONY : pragma_database_size.i

# target to preprocess a source file
pragma_database_size.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_database_size.cpp.i
.PHONY : pragma_database_size.cpp.i

pragma_database_size.s: pragma_database_size.cpp.s
.PHONY : pragma_database_size.s

# target to generate assembly for a file
pragma_database_size.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_database_size.cpp.s
.PHONY : pragma_database_size.cpp.s

pragma_functions.o: pragma_functions.cpp.o
.PHONY : pragma_functions.o

# target to build an object file
pragma_functions.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_functions.cpp.o
.PHONY : pragma_functions.cpp.o

pragma_functions.i: pragma_functions.cpp.i
.PHONY : pragma_functions.i

# target to preprocess a source file
pragma_functions.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_functions.cpp.i
.PHONY : pragma_functions.cpp.i

pragma_functions.s: pragma_functions.cpp.s
.PHONY : pragma_functions.s

# target to generate assembly for a file
pragma_functions.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_functions.cpp.s
.PHONY : pragma_functions.cpp.s

pragma_storage_info.o: pragma_storage_info.cpp.o
.PHONY : pragma_storage_info.o

# target to build an object file
pragma_storage_info.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_storage_info.cpp.o
.PHONY : pragma_storage_info.cpp.o

pragma_storage_info.i: pragma_storage_info.cpp.i
.PHONY : pragma_storage_info.i

# target to preprocess a source file
pragma_storage_info.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_storage_info.cpp.i
.PHONY : pragma_storage_info.cpp.i

pragma_storage_info.s: pragma_storage_info.cpp.s
.PHONY : pragma_storage_info.s

# target to generate assembly for a file
pragma_storage_info.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_storage_info.cpp.s
.PHONY : pragma_storage_info.cpp.s

pragma_table_info.o: pragma_table_info.cpp.o
.PHONY : pragma_table_info.o

# target to build an object file
pragma_table_info.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_table_info.cpp.o
.PHONY : pragma_table_info.cpp.o

pragma_table_info.i: pragma_table_info.cpp.i
.PHONY : pragma_table_info.i

# target to preprocess a source file
pragma_table_info.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_table_info.cpp.i
.PHONY : pragma_table_info.cpp.i

pragma_table_info.s: pragma_table_info.cpp.s
.PHONY : pragma_table_info.s

# target to generate assembly for a file
pragma_table_info.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/pragma_table_info.cpp.s
.PHONY : pragma_table_info.cpp.s

test_all_types.o: test_all_types.cpp.o
.PHONY : test_all_types.o

# target to build an object file
test_all_types.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/test_all_types.cpp.o
.PHONY : test_all_types.cpp.o

test_all_types.i: test_all_types.cpp.i
.PHONY : test_all_types.i

# target to preprocess a source file
test_all_types.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/test_all_types.cpp.i
.PHONY : test_all_types.cpp.i

test_all_types.s: test_all_types.cpp.s
.PHONY : test_all_types.s

# target to generate assembly for a file
test_all_types.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/test_all_types.cpp.s
.PHONY : test_all_types.cpp.s

test_vector_types.o: test_vector_types.cpp.o
.PHONY : test_vector_types.o

# target to build an object file
test_vector_types.cpp.o:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/test_vector_types.cpp.o
.PHONY : test_vector_types.cpp.o

test_vector_types.i: test_vector_types.cpp.i
.PHONY : test_vector_types.i

# target to preprocess a source file
test_vector_types.cpp.i:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/test_vector_types.cpp.i
.PHONY : test_vector_types.cpp.i

test_vector_types.s: test_vector_types.cpp.s
.PHONY : test_vector_types.s

# target to generate assembly for a file
test_vector_types.cpp.s:
	cd /home/os/code/duckdb/cbuild && $(MAKE) $(MAKESILENT) -f src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/build.make src/function/table/system/CMakeFiles/duckdb_table_func_system.dir/test_vector_types.cpp.s
.PHONY : test_vector_types.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... duckdb_table_func_system"
	@echo "... duckdb_columns.o"
	@echo "... duckdb_columns.i"
	@echo "... duckdb_columns.s"
	@echo "... duckdb_constraints.o"
	@echo "... duckdb_constraints.i"
	@echo "... duckdb_constraints.s"
	@echo "... duckdb_dependencies.o"
	@echo "... duckdb_dependencies.i"
	@echo "... duckdb_dependencies.s"
	@echo "... duckdb_functions.o"
	@echo "... duckdb_functions.i"
	@echo "... duckdb_functions.s"
	@echo "... duckdb_indexes.o"
	@echo "... duckdb_indexes.i"
	@echo "... duckdb_indexes.s"
	@echo "... duckdb_keywords.o"
	@echo "... duckdb_keywords.i"
	@echo "... duckdb_keywords.s"
	@echo "... duckdb_schemas.o"
	@echo "... duckdb_schemas.i"
	@echo "... duckdb_schemas.s"
	@echo "... duckdb_sequences.o"
	@echo "... duckdb_sequences.i"
	@echo "... duckdb_sequences.s"
	@echo "... duckdb_settings.o"
	@echo "... duckdb_settings.i"
	@echo "... duckdb_settings.s"
	@echo "... duckdb_tables.o"
	@echo "... duckdb_tables.i"
	@echo "... duckdb_tables.s"
	@echo "... duckdb_types.o"
	@echo "... duckdb_types.i"
	@echo "... duckdb_types.s"
	@echo "... duckdb_views.o"
	@echo "... duckdb_views.i"
	@echo "... duckdb_views.s"
	@echo "... pragma_collations.o"
	@echo "... pragma_collations.i"
	@echo "... pragma_collations.s"
	@echo "... pragma_database_list.o"
	@echo "... pragma_database_list.i"
	@echo "... pragma_database_list.s"
	@echo "... pragma_database_size.o"
	@echo "... pragma_database_size.i"
	@echo "... pragma_database_size.s"
	@echo "... pragma_functions.o"
	@echo "... pragma_functions.i"
	@echo "... pragma_functions.s"
	@echo "... pragma_storage_info.o"
	@echo "... pragma_storage_info.i"
	@echo "... pragma_storage_info.s"
	@echo "... pragma_table_info.o"
	@echo "... pragma_table_info.i"
	@echo "... pragma_table_info.s"
	@echo "... test_all_types.o"
	@echo "... test_all_types.i"
	@echo "... test_all_types.s"
	@echo "... test_vector_types.o"
	@echo "... test_vector_types.i"
	@echo "... test_vector_types.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/os/code/duckdb/cbuild && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

